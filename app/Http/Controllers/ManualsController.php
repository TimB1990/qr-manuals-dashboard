<?php

namespace App\Http\Controllers;

use App\Manual;
use App\Product;
use Illuminate\Http\Request;
use Illuminate\Support\Facades\DB;
use Illuminate\Support\Facades\Storage;

class ManualsController extends Controller
{
    public function index(Request $request)
    {
        // retrieve path-parameter id from request
        $id = $request->route('id');
        $manuals = Manual::where('product_id', $id)->get();
        
        return response()->json($manuals);
    }

    public function indexByArtnr(Request $request){
        $artnr = $request->route('artnr');
        $manuals = Manual::where('artnr', $artnr)->get();

        return response()->json($manuals);
    }

    public function create()
    {
        //
    }

    public function store(Request $request)
    {
        $files = $request->file('files');
        $product = Product::find($request->route('id'));

        foreach($files as $file) {

            Storage::put('files/'.$product->artnr, $file);
            $file_path = "files/".$product->artnr ."/".$file->hashname();

            $manual = Manual::create([
                // id = autogenerated
                'product_id' => $product->id,
                'file_name' => $file->getClientOriginalName(),
                'file_path' => $file_path,
                'file_url' => '',
                'artnr' => $product->artnr
            ]);

            $manual->file_url = route('products.manuals.show', [$product->id, $manual->id]);
            $manual->save();
            
            // store feedmessage
            $fm = FeedMessage()->save(new FeedMessage());

        }

        return response()->json(['success'=>'upload successful']);

    }

    public function show($id, $manual_id, Request $request)
    {
        $manual = Manual::find($manual_id);
        return Storage::download($manual->file_path);
    }

    public function edit(Manual $manual)
    {
        //
    }

    public function update(Request $request, Manual $manual)
    {
        //
    }

    public function destroy($id, $manual_id, Request $request)
    {
        // dd('manual_id ' . $manual_id . ' productid ' . $id );
        $manual = Manual::find($manual_id);

        if($manual){

            Storage::delete($manual->file_path);
            $manual->delete();
            return response()->json(['success' => 'deleted']);

        }
    }
}
